#import data from excell sheet
wbcd <- read.csv("E:\\Data_Science\\self_study\\Breast-Cancer-Wisconsin-Diagnostic-DataSet-master\\data.csv", stringsAsFactors = FALSE)
str(wbcd)
wbcd <- wbcd[-1]
table(wbcd$diagnosis)

#convert diagnosis column into factor data type
wbcd$diagnosis <- factor(wbcd$diagnosis, levels = c('B','M'), labels = c('Benign','Malignant'))
round(prop.table(table(wbcd$diagnosis)) * 100, digits = 1)
summary(wbcd[c("radius_mean","area_mean","smoothness_mean")])

#Normalize data between 0 and 1 for all columns using max,min method
Normalize <- function(x) {
  return((x - min(x)) / (max(x) - min(x)) )
}

Normalize(c(1,2,3,4,5))
Normalize(c(10,20,30,40,50))

#apply normalisation to whole dataset
wbcd_n <- as.data.frame(lapply(wbcd[2:31], Normalize))
summary(wbcd_n$area_mean)

#create train and test dataset
wbcd_train <- wbcd_n[1:469, ]
wbcd_test <- wbcd_n[470:569, ]

#attach labels to the data
wbcd_train_labels <- wbcd[1:469, 1]
wbcd_test_labels <- wbcd[470:569, 1]

#install package to apply knn theorem
install.packages("class")
library(class)

#apply knn theorem
wbcd_test_pred <- knn(train = wbcd_train, test = wbcd_test, cl = wbcd_train_labels, k = 21)

install.packages("gmodels")
library(gmodels)

CrossTable(x = wbcd_test_labels, y = wbcd_test_pred, prop.chisq = FALSE)

# Analize Using - Z score to check whether model model performance is increasing or not..

wbcd_z <- as.data.frame(scale(wbcd[-1]))
summary(wbcd_z$area_mean)

wbcd_train <- wbcd_z[1:469, ]
wbcd_test <- wbcd_z[470:569, ]

wbcd_train_labels <- wbcd[1:469, 1]
wbcd_test_labels <- wbcd[470:569, 1]

wbcd_test_pred <- knn(train = wbcd_train, test = wbcd_test, cl = wbcd_train_labels, k = 21)

CrossTable(x = wbcd_test_labels, y = wbcd_test_pred, prop.chisq = FALSE)
