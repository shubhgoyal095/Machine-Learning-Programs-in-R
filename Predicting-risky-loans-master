#Import and analyse the data

credit <- read.csv("E:\\Data_Science\\self_study\\Predicting-risky-loans-master\\credit.csv")
str(credit)
table(credit$checking_balance)
table(credit$savings_balance)
summary(credit$months_loan_duration)
summary(credit$amount)
table(credit$default)

#Data preparation

set.seed(123)
train_sample <- sample(1000, 900)
str(train_sample)

#Prepare train and test data

credit_train <- credit[train_sample, ]
credit_test <- credit[-train_sample, ]

#check that train and test data have 30% defaulter data

prop.table(table(credit_train$default))
prop.table(table(credit_test$default))

#install decision tree package

#install.packages("C50")
library(C50)

#Convertng credit_train$default column into factor to avoid error "Error: C5.0 models require a factor outcome" dring model creation

credit_train$default <- as.factor(credit_train$default)

#train data using decision tree classifier

credit_model <- C5.0(credit_train[-17], credit_train$default)
credit_model
summary(credit_model)

#evaulating model performance/prediction

credit_pred <- predict(credit_model, credit_test)
library(gmodels)
CrossTable(credit_test$default, credit_pred,
           prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,
           dnn = c('actual default', 'predicted default '))

#Improving Model Performance

credit_boost10 <- C5.0(credit_train[-17], credit_train$default, trials = 10)
credit_boost10
summary(credit_boost10)

credit_boost_pred10 <- predict(credit_boost10, credit_test)
CrossTable(credit_test$default, credit_boost_pred10,
           prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,
           dnn = c('actual default', 'predicted default '))

#assign penalties using cost matrix

matrix_dimensions <- list(c("no", "yes"), c("no", "yes"))
names(matrix_dimensions) <- c("predected", "actual")
matrix_dimensions

error_cost <- matrix(c(0, 1, 4, 0), nrow = 2, dimnames = matrix_dimensions)
error_cost

#apply error cost to improve our model

credit_cost <- C5.0(credit_train[-17], credit_train$default, costs = error_cost)
credit_cost_pred <- predict(credit_cost, credit_test)
CrossTable(credit_test$default, credit_cost_pred,
           prop.chisq = FALSE, prop.c = FALSE, prop.r = FALSE,
           dnn = c('actual default', 'predicted default'))
